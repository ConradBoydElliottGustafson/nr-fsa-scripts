# This is a basic workflow to help you get started with Actions

name: dba_artifacts

on:
  push:
    branches: [ main ]
    paths:
    - 'scripts/**'
  pull_request:
    branches: [ main ]
    paths:
    - 'scripts/**'

jobs:

  # Identify the list folder that needs to be packaged into an artifact
  setup:
    runs-on: ubuntu-latest
    outputs:
      create_artifact: ${{ steps.set-dir.outputs.create_artifact }}
      path: ${{ steps.set-dir.outputs.path }}
    steps:
      - uses: actions/checkout@v2
      
      - id: files
        name: Get change set
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'csv'
    
      - id: set-dir
        name: Calculate directories to turn into artifacts
        run: |
          set -eux
          echo "::set-output name=create_artifact::false"
          echo "::set-output name=path::scripts"
          declare -a dirs=()
          for d in scripts/*/ ; do
            if [ ${d} == *"${{ steps.files.outputs.all }}"* ];
            then
                dirs+=("$d")
            fi
          done
          if [ ${#dirs[@]} -gt 1 ];
          then
            echo "You may not change more than 1 directory in a single PR. This one has ${#dirs[@]} directory changes."
            exit 1
          fi
          if [ ${#dirs[@]} -eq 0 ];
          then
            echo "No changes to scripts directories."
            exit 0
          fi
          echo "::set-output name=create_artifact::true"
          echo "::set-output name=path::${dirs[0]}"
          echo "create_artifact: ${{ steps.set-dir.outputs.create_artifact }}"
          echo "path: ${{ steps.set-dir.outputs.path }}"
          
      - uses: actions/upload-artifact@v3
        if: ${{ steps.set-dir.outputs.create_artifact }}
        with:
          name: "zipfilefordbas"
          path: ${{ steps.set-dir.outputs.path }}
          

      

