# This is a basic workflow to help you get started with Actions

name: dba_artifacts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  # Identify the list of folders that need to be packaged into artifacts
  setup:
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.set-dirs.outputs.dirs }}
      changes: ${{ steps.files.outputs.all }}
    steps:
      - uses: actions/checkout@v2
      
      - id: files
        uses: jitterbit/get-changed-files@v1
        with:
          format: 'csv'
    
      - id: set-dirs
        name: Calculate directories to turn into artifacts
        run: |
          declare -a dirs
          for d in scripts/*/ ; do
            if [ ${d} = *"${{ steps.files.outputs.all }}"* ];
            then
                dirs+=("$d")
            fi
          done
          dirs_json=$(printf '%s\n' "${dirs[@]}" | jq -R . | jq -s . | tr -d '\r\n')
          echo "dirs_json: ${dirs_json}"
          echo "::set-output name=dirs::${dirs_json}"
          
  artifacts:
    needs: [ setup ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ${{fromJson(needs.setup.outputs.dirs)}}

    steps:
      - uses: actions/checkout@v2
      
      # reference the changes with this variable
      # 
      
      - uses: actions/upload-artifact@v3
        if: ${{ contains(needs.setup.outputs.changes, matrix.dir) }}
        with:
          path: ${{ matrix.dir }} 
